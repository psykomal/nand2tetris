
/** Implements a graphical circle. */
class Circle {

   field int radius;
   field int cx, cy;

   /** Constructs a new circle with a given location and size. */
   constructor Circle new(int Acx, int Acy, int Aradius) {
      let cx = Acx;
      let cy = Acy;
      let radius = Aradius;
      do draw();
      return this;
   }

   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   /** Draws the circle on the screen. */
   method void draw() {
      do Screen.setColor(true);
      do Screen.drawCircle(cx, cy, radius);
      return;
   }

   /** Erases the square from the screen. */
   method void erase() {
      do Screen.setColor(false);
      do Screen.drawCircle(cx, cy, radius);
      return;
   }

    /** Increments the circle size by 2 pixels. */
   method void incSize() {
      if (((cy + radius) < 254) & ((cx + radius) < 510)) {
         do erase();
         let radius = radius + 2;
         do draw();
      }
      return;
   }

   /** Decrements the circle size by 2 pixels. */
   method void decSize() {
      if (radius > 2) {
         do erase();
         let radius = radius - 2;
         do draw();
      }
      return;
   }

   /** Moves the circle up by 2 pixels. */
   method void moveUp() {
      if (y > 1) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
         let y = y - 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + size, y + 1);
      }
      return;
   }

   /** Moves the square down by 2 pixels. */
   method void moveDown() {
      if ((y + size) < 254) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + size, y + 1);
         let y = y + 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
      }
      return;
   }

   /** Moves the square left by 2 pixels. */
   method void moveLeft() {
      if (x > 1) {
         do Screen.setColor(false);
         do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
         let x = x - 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + 1, y + size);
      }
      return;
   }

   /** Moves the square right by 2 pixels. */
   method void moveRight() {
      if ((x + size) < 510) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + 1, y + size);
         let x = x + 2;
         do Screen.setColor(true);
         do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
      }
      return;
   }
}
