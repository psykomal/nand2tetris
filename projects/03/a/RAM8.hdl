// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux8Way16(a=w1, b=w2, c=w3, d=w4, e=w5, f=w6, g=w7, h=w8, sel=address, out=out);

    DMux8Way(in=load, sel=address, a=d1, b=d2, c=d3, d=d4, e=d5, f=d6, g=d7, h=d8);

    Register(in=in, load=d1, out=w1);
    Register(in=in, load=d2, out=w2);
    Register(in=in, load=d3, out=w3);
    Register(in=in, load=d4, out=w4);
    Register(in=in, load=d5, out=w5);
    Register(in=in, load=d6, out=w6);
    Register(in=in, load=d7, out=w7);
    Register(in=in, load=d8, out=w8);


}